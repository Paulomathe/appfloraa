# PDV App (Flora App)

Aplicativo de ponto de venda (PDV) para gest√£o de vendas, produtos, servi√ßos, clientes e vendedores, desenvolvido em **React Native** com **Expo Router** e integra√ß√£o com **Supabase**.

---

## üöÄ Como executar o projeto

### 1. Pr√©-requisitos

- [Node.js](https://nodejs.org/) (recomendado v18 ou superior)
- [Expo CLI](https://docs.expo.dev/get-started/installation/)  
  Instale com:  
  ```
  npm install -g expo-cli
  ```
- Celular Android ou emulador Android
- Conta gratuita no [Supabase](https://supabase.com/) (para backend e autentica√ß√£o)

---

### 2. Clonar o reposit√≥rio

```sh
git clone https://github.com/seu-usuario/appflora.git
cd appfloraa
```

---

### 3. Instalar as depend√™ncias

```sh
npm install
# ou
yarn install
```

---

### 4. Configurar o Supabase

- Renomeie o arquivo `.env.example` para `.env` (se existir).
- Preencha as vari√°veis com as chaves do seu projeto Supabase.
- Caso n√£o exista `.env.example`, edite diretamente o arquivo de configura√ß√£o em `src/constants/supabase.ts` com sua URL e chave an√¥nima do Supabase.

---

### 5. Rodar o projeto no Android (modo desenvolvimento)

```sh
npx expo start
```

- Escaneie o QR Code com o aplicativo **Expo Go** no seu celular Android  
  **OU**  
- Pressione `a` no terminal para abrir no emulador Android.

---

### 6. Gerar APK para instalar manualmente (sem publicar)

Se quiser gerar um APK para instalar no seu celular:

1. Instale o EAS CLI:
   ```
   npm install -g eas-cli
   ```

2. Configure o EAS Build:
   ```
   eas build:configure
   ```

3. Gere o APK:
   ```
   eas build -p android --profile preview
   ```
   - Escolha a op√ß√£o APK quando solicitado.
   - Ap√≥s o build, baixe o arquivo APK pelo link exibido no terminal.

4. Instale o APK no seu celular.

---

## üìÅ Estrutura de Pastas

```
src/
  app/
    (painel)/        # Telas do painel principal
    profile/         # Tela de perfil do usu√°rio
    signin/          # Tela de login
    signup/          # Tela de cadastro
    _index.tsx       # Tela inicial
    _layout.tsx      # Layout global
  components/        # Componentes reutiliz√°veis
  contexts/          # Contextos de autentica√ß√£o e outros
  constants/         # Cores e estilos globais
  lib/               # Integra√ß√£o com Supabase
assets/
  images/            # Imagens e √≠cones do app
```

---

## üìù Observa√ß√µes

- O √≠cone do app est√° em `assets/images/iconeApp.png` (recomendado 1024x1024px).
- O splash screen est√° em `assets/images/loading.png`.
- Para personalizar temas, edite `src/constants/colors.ts`.

---

## üõ†Ô∏è Tecnologias Utilizadas

- [Expo](https://expo.dev/)
- [React Native](https://reactnative.dev/)
- [Expo Router](https://expo.github.io/router/)
- [React Native Elements](https://reactnativeelements.com/) (`@rneui/themed`)
- [Supabase](https://supabase.com/)

---

## üìÑ Licen√ßa

Este projeto est√° sob a licen√ßa MIT.

---

Desenvolvido por Paulo Matheus Avelino de Jesus 
